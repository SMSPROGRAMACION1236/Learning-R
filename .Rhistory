Sys.which("make")
ls
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
setwd("C:/Users/santi/Programaci√≥n/Hello R")
class(y)
x
print(x)
class(x)
class(x)
x <-123
x
x <- 23
x
class(x)
class(y)
class(x)
class(y)
y <- "Hola"
class(y)
s <- c(1, 6, 8, 10)
s
#DataFrames
tabla <- data.frame((x = 1:10, y = 11:20))
#DataFrames
tabla <- data.frame(x = 1:10, y = 11:20)
tabla
list1 <- list(x = tabla, y = s)
list1
?matrix
mdat
as.matrix(warpbreaks[1:10,])  # using as.matrix.data.frame(.) method
mdat
## Example of setting row and column names
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
!is.matrix(warpbreaks)  # data.frame, NOT matrix!
is.matrix(as.matrix(1:10))
is.matrix(as.matrix(1:10))
!is.matrix(warpbreaks)  # data.frame, NOT matrix!
warpbreaks[1:10,]
as.matrix(warpbreaks[1:10,])  # using as.matrix.data.frame(.) method
## Example of setting row and column names
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mi_vector
mi_vector <- c(1, 8, 5, 10)
mi_vector
class(mi_vector)
x <- 6
mi_vector2 <- 4: 155
mi_vector2
length(mi_vector2)
mi_vector3 <- vector(mode = "numeric", lenght = 14)
mi_vector3 <- vector(mode = "numeric", length = 14)
mi_vector3
mi_vector3 <- vector(mode = "logical", length = 14)
mi_vector4 <- vector(mode = "logical", length = 14)
mi_vector4
hola <- c("Hola", "Como", "Estamos")
hola
mixto <- c(1, "perro", 4, 7, 2)
mixto
d <- c(7.1)
is.vector(d)
is.numeric(d)
is.character(d)
is.character(mixto)
h <- c(4, 7, 3, NA, 65, 2)
h
is.na(h)
mean(c(4, 8))
zinc <- (3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
zinc <- (3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
zinc <- (3,5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
zinc <- (3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
zinc <- (5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
zinc <- (3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
length(zinc)
zinc <- (3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
length(zinc)
zinc <- c(3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
length(zinc)
mean(zinc)
mean(zinc, na.rm = TRUE)
sd(zinc)
sd(zinc, na.rm = TRUE)
median(zinc, na.rm = TRUE)
median(zinc, na.rm = TRUE) # Calcular la mediana
zinc[!is.na(zinc)]
zinc[!is.na(zinc)]
zinc
zinc <- zinc[!is.na(zinc)]
zinc
sort(zinc)
summary(zinc)
boxplot(zinc)
hist(zinc)
plot(density(zinc), col = "blue")
c(1: 10, 8, 9, 89, 0)
(c(1: 10, 8, 9, 89, 0),800)
c(c(1: 10, 8, 9, 89, 0),800)
rep(3, 10)
rep(c(4, 6, 1), times = 3)
rep(c(4, 6, 1), each = 3)
seq(-2, 4, length = 10)
seq(-2, 4, by = 0.5)
x <- 11:18
x
x(3)
x[]
x[3]
x[3:6]
x[2] <- 1000
x
rev(x)
x[x >14 & x < 18]
is.element(13, x)
boxplot(zinc)  #Graficos
plot(density(zinc), col = "blue")
# Vectores
mi_vector <- c(1, 8, 5, 10)
mi_vector
class(mi_vector)
mi_vector2 <- 4: 155
length(mi_vector2)
mi_vector3 <- vector(mode = "numeric", length = 14)
mi_vector4 <- vector(mode = "logical", length = 14)
mi_vector4
hola <- c("Hola", "Como", "Estamos")
hola
# R no permite mezclar tipos de datos diferentes en vectores
mixto <- c(1, "perro", 4, 7, 2) # En este caso se cambia los numeros a string segun R
mixto
d <- c(7.1)
is.vector(d)  #Estructura de datos
is.numeric(d)  # Tipo de datos
is.character(d)
is.character(mixto)
h <- c(4, 7, 3, NA, 65, 2)  # NA = Sin valor
is.na(h)  # Para saber si un elemento esta vacio
mean(c(4, 8))  #Calcular el promedio
zinc <- c(3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
length(zinc)
zinc <- zinc[!is.na(zinc)]  # Para no hacer na.rm = TRUE
mean(zinc, na.rm = TRUE)  # PAra eliminar el NA
sd(zinc, na.rm = TRUE)  # Desviacion estandar, que tanto varia los datos en cuanto a la media o promedio
median(zinc, na.rm = TRUE) # Calcular la median
sort(zinc)
summary(zinc) # Datos y analisis
boxplot(zinc)  #Graficos
zin
# Vectores
mi_vector <- c(1, 8, 5, 10)
mi_vector
class(mi_vector)
mi_vector2 <- 4: 155
length(mi_vector2)
mi_vector3 <- vector(mode = "numeric", length = 14)
mi_vector4 <- vector(mode = "logical", length = 14)
mi_vector4
hola <- c("Hola", "Como", "Estamos")
hola
# R no permite mezclar tipos de datos diferentes en vectores
mixto <- c(1, "perro", 4, 7, 2) # En este caso se cambia los numeros a string segun R
mixto
d <- c(7.1)
is.vector(d)  #Estructura de datos
is.numeric(d)  # Tipo de datos
is.character(d)
is.character(mixto)
h <- c(4, 7, 3, NA, 65, 2)  # NA = Sin valor
is.na(h)  # Para saber si un elemento esta vacio
mean(c(4, 8))  #Calcular el promedio
zinc <- c(3, 5.8, 5.6, 4.8, 5.1, 3.6, 5.5, 4.7, 5.7, 5, 5.9, 5.7, 4.4, 5.4, 4.2, 5.3, NA)
length(zinc)
zinc <- zinc[!is.na(zinc)]  # Para no hacer na.rm = TRUE
mean(zinc, na.rm = TRUE)  # PAra eliminar el NA
sd(zinc, na.rm = TRUE)  # Desviacion estandar, que tanto varia los datos en cuanto a la media o promedio
median(zinc, na.rm = TRUE) # Calcular la median
sort(zinc)
summary(zinc) # Datos y analisis
boxplot(zinc)  #Graficos
zin
